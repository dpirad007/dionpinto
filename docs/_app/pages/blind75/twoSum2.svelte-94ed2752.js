import{S as Ze,i as et,s as tt,e as a,k as o,t as m,w as R,c as n,a as l,m as i,h as u,d as s,x as G,b as t,f as rt,g as ne,J as e,y as j,E as st,q as z,o as K,B as Q}from"../../chunks/index-cd4245c1.js";import{b as at}from"../../chunks/paths-c8fbcc1d.js";import{S as nt,N as lt,F as ot}from"../../chunks/Footer-8b9c5841.js";import{T as qe}from"../../chunks/Title-6ea0487f.js";function it(Ye){let f,U,le,W,oe,X,ie,Z,y,ee,p,B,x,de,d,v,S,ce,Y,me,ue,q,fe,he,_,N,T,pe,ve,O,C,$e,_e,w,D,we,I,ge,g,Ee,be,c,A,ye,P,L,xe,Ne=`
    class Solution:
        def twoSum(self, numbers: List[int], target: int) -> List[int]:
            l,r=0,len(numbers)-1
            while(l<r):
                s=numbers[l]+numbers[r]
                if(s==target):
                    return [l+1,r+1]
                elif(s>target):
                    r-=1
                elif(s<target):
                    l+=1
				`,Se,Te,Ce,H,De,Ie,M,Ae,Pe,E,Le,ke,V,k,te;return y=new nt({}),x=new lt({props:{curPage:"Blog"}}),S=new qe({props:{type:2,title:Xe}}),D=new qe({props:{type:5,title:"Description"}}),A=new qe({props:{type:5,title:"Code (Python) -> 2 pointer"}}),k=new ot({}),{c(){f=a("head"),U=a("meta"),le=o(),W=a("meta"),oe=o(),X=a("title"),ie=m("11. Container with most water"),Z=o(),R(y.$$.fragment),ee=o(),p=a("main"),B=a("header"),R(x.$$.fragment),de=o(),d=a("main"),v=a("div"),R(S.$$.fragment),ce=o(),Y=a("h4"),me=m("Leetcode Blind 75"),ue=o(),q=a("h5"),fe=m("19th June 2022 ~ Dion Pinto"),he=o(),_=a("div"),N=a("div"),T=a("a"),pe=m("Description"),ve=o(),O=a("div"),C=a("a"),$e=m("Code"),_e=o(),w=a("section"),R(D.$$.fragment),we=o(),I=a("p"),ge=m(`Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order,
				find two numbers such that they add up to a specific target number. Let these two numbers be
				numbers[index1] and numbers[index2] where 1 less than equal index1 less than index2 less
				than equal numbers.length.

				`),g=a("a"),Ee=m("(Problem)"),be=o(),c=a("section"),R(A.$$.fragment),ye=o(),P=a("pre"),L=a("code"),xe=m(`
				`),Se=m(Ne),Te=m(`			
			`),Ce=o(),H=a("p"),De=m("Time Complexity => o(n)"),Ie=o(),M=a("p"),Ae=m("Space Complexity => o(1)"),Pe=o(),E=a("a"),Le=m("Back"),ke=o(),V=a("footer"),R(k.$$.fragment),this.h()},l(r){f=n(r,"HEAD",{});var h=l(f);U=n(h,"META",{name:!0,content:!0}),le=i(h),W=n(h,"META",{name:!0,content:!0}),oe=i(h),X=n(h,"TITLE",{});var Oe=l(X);ie=u(Oe,"11. Container with most water"),Oe.forEach(s),h.forEach(s),Z=i(r),G(y.$$.fragment,r),ee=i(r),p=n(r,"MAIN",{class:!0});var F=l(p);B=n(F,"HEADER",{class:!0});var He=l(B);G(x.$$.fragment,He),He.forEach(s),de=i(F),d=n(F,"MAIN",{class:!0});var $=l(d);v=n($,"DIV",{id:!0});var J=l(v);G(S.$$.fragment,J),ce=i(J),Y=n(J,"H4",{});var Me=l(Y);me=u(Me,"Leetcode Blind 75"),Me.forEach(s),ue=i(J),q=n(J,"H5",{style:!0});var Ve=l(q);fe=u(Ve,"19th June 2022 ~ Dion Pinto"),Ve.forEach(s),J.forEach(s),he=i($),_=n($,"DIV",{id:!0,class:!0});var re=l(_);N=n(re,"DIV",{class:!0});var Fe=l(N);T=n(Fe,"A",{href:!0,class:!0});var Je=l(T);pe=u(Je,"Description"),Je.forEach(s),Fe.forEach(s),ve=i(re),O=n(re,"DIV",{class:!0});var Re=l(O);C=n(Re,"A",{href:!0,class:!0});var Ge=l(C);$e=u(Ge,"Code"),Ge.forEach(s),Re.forEach(s),re.forEach(s),_e=i($),w=n($,"SECTION",{id:!0,class:!0});var se=l(w);G(D.$$.fragment,se),we=i(se),I=n(se,"P",{class:!0});var Be=l(I);ge=u(Be,`Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order,
				find two numbers such that they add up to a specific target number. Let these two numbers be
				numbers[index1] and numbers[index2] where 1 less than equal index1 less than index2 less
				than equal numbers.length.

				`),g=n(Be,"A",{id:!0,href:!0,target:!0,class:!0});var je=l(g);Ee=u(je,"(Problem)"),je.forEach(s),Be.forEach(s),se.forEach(s),be=i($),c=n($,"SECTION",{id:!0,class:!0});var b=l(c);G(A.$$.fragment,b),ye=i(b),P=n(b,"PRE",{id:!0,class:!0});var ze=l(P);L=n(ze,"CODE",{});var ae=l(L);xe=u(ae,`
				`),Se=u(ae,Ne),Te=u(ae,`			
			`),ae.forEach(s),ze.forEach(s),Ce=i(b),H=n(b,"P",{class:!0});var Ke=l(H);De=u(Ke,"Time Complexity => o(n)"),Ke.forEach(s),Ie=i(b),M=n(b,"P",{class:!0});var Qe=l(M);Ae=u(Qe,"Space Complexity => o(1)"),Qe.forEach(s),b.forEach(s),Pe=i($),E=n($,"A",{type:!0,class:!0,href:!0});var Ue=l(E);Le=u(Ue,"Back"),Ue.forEach(s),$.forEach(s),ke=i(F),V=n(F,"FOOTER",{class:!0});var We=l(V);G(k.$$.fragment,We),We.forEach(s),F.forEach(s),this.h()},h(){t(U,"name","author"),t(U,"content","Dion Pinto"),t(W,"name","description"),t(W,"content",`Leetcode Blind 75 ${Xe}`),t(B,"class","svelte-r754dw"),rt(q,"font-style","italic"),t(v,"id","title"),t(T,"href","#description"),t(T,"class","svelte-r754dw"),t(N,"class","svelte-r754dw"),t(C,"href","#code"),t(C,"class","svelte-r754dw"),t(O,"class","svelte-r754dw"),t(_,"id","index"),t(_,"class","nes-container is-rounded is-dark svelte-r754dw"),t(g,"id","link"),t(g,"href","https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/"),t(g,"target","_blank"),t(g,"class","svelte-r754dw"),t(I,"class","svelte-r754dw"),t(w,"id","description"),t(w,"class","svelte-r754dw"),t(P,"id","block"),t(P,"class","svelte-r754dw"),t(H,"class","svelte-r754dw"),t(M,"class","svelte-r754dw"),t(c,"id","code"),t(c,"class","svelte-r754dw"),t(E,"type","button"),t(E,"class","nes-btn is-primary svelte-r754dw"),t(E,"href",`${at}/blind75`),t(d,"class","container svelte-r754dw"),t(V,"class","svelte-r754dw"),t(p,"class","main svelte-r754dw")},m(r,h){ne(r,f,h),e(f,U),e(f,le),e(f,W),e(f,oe),e(f,X),e(X,ie),ne(r,Z,h),j(y,r,h),ne(r,ee,h),ne(r,p,h),e(p,B),j(x,B,null),e(p,de),e(p,d),e(d,v),j(S,v,null),e(v,ce),e(v,Y),e(Y,me),e(v,ue),e(v,q),e(q,fe),e(d,he),e(d,_),e(_,N),e(N,T),e(T,pe),e(_,ve),e(_,O),e(O,C),e(C,$e),e(d,_e),e(d,w),j(D,w,null),e(w,we),e(w,I),e(I,ge),e(I,g),e(g,Ee),e(d,be),e(d,c),j(A,c,null),e(c,ye),e(c,P),e(P,L),e(L,xe),e(L,Se),e(L,Te),e(c,Ce),e(c,H),e(H,De),e(c,Ie),e(c,M),e(M,Ae),e(d,Pe),e(d,E),e(E,Le),e(p,ke),e(p,V),j(k,V,null),te=!0},p:st,i(r){te||(z(y.$$.fragment,r),z(x.$$.fragment,r),z(S.$$.fragment,r),z(D.$$.fragment,r),z(A.$$.fragment,r),z(k.$$.fragment,r),te=!0)},o(r){K(y.$$.fragment,r),K(x.$$.fragment,r),K(S.$$.fragment,r),K(D.$$.fragment,r),K(A.$$.fragment,r),K(k.$$.fragment,r),te=!1},d(r){r&&s(f),r&&s(Z),Q(y,r),r&&s(ee),r&&s(p),Q(x),Q(S),Q(D),Q(A),Q(k)}}}const Xe="167. Two Sum II - Input Array Is Sorted";class ft extends Ze{constructor(f){super(),et(this,f,null,it,tt,{})}}export{ft as default};
