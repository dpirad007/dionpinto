import{S as Zt,i as te,s as ee,e as r,k as s,t as f,w as R,c as n,a as o,m as l,h as m,d as a,x as H,b as i,f as ae,g as ot,J as t,y as M,E as re,q as V,o as Y,B as F}from"../../chunks/index-cd4245c1.js";import{b as ne}from"../../chunks/paths-c8fbcc1d.js";import{S as oe,N as ie,F as se}from"../../chunks/Footer-8b9c5841.js";import{T as Ot}from"../../chunks/Title-6ea0487f.js";/* empty css                           */function le(Xt){let d,J,st,q,lt,z,ct,Z,x,tt,u,j,T,ft,c,v,k,mt,G,dt,pt,B,ht,ut,_,K,P,vt,$t,Q,C,_t,yt,y,D,gt,I,Et,g,bt,xt,p,S,Tt,N,w,kt,Rt=`
    import math
    class Solution:
        def maxProfit(self, prices: List[int]) -> int:
            max_profit=0
            mi=math.inf
            for i in range(len(prices)):
                if(prices[i]<mi):mi=prices[i]
                max_profit=max(abs(prices[i]-mi),max_profit)
            return max_profit
				`,Dt,St,wt,U,At,Bt,W,Pt,Ct,E,It,Nt,X,A,et;return x=new oe({}),T=new ie({props:{curPage:"Blog"}}),k=new Ot({props:{type:2,title:it}}),D=new Ot({props:{type:5,title:"Description"}}),S=new Ot({props:{type:5,title:"Code (Python)"}}),A=new se({}),{c(){d=r("head"),J=r("meta"),st=s(),q=r("meta"),lt=s(),z=r("title"),ct=f(it),Z=s(),R(x.$$.fragment),tt=s(),u=r("main"),j=r("header"),R(T.$$.fragment),ft=s(),c=r("main"),v=r("div"),R(k.$$.fragment),mt=s(),G=r("h4"),dt=f("Leetcode Blind 75"),pt=s(),B=r("h5"),ht=f("20th June 2022 ~ Dion Pinto"),ut=s(),_=r("div"),K=r("div"),P=r("a"),vt=f("Description"),$t=s(),Q=r("div"),C=r("a"),_t=f("Code"),yt=s(),y=r("section"),R(D.$$.fragment),gt=s(),I=r("p"),Et=f(`You are given an array prices where prices[i] is the price of a given stock on the ith day.
				You want to maximize your profit by choosing a single day to buy one stock and choosing a
				different day in the future to sell that stock. Return the maximum profit you can achieve
				from this transaction. If you cannot achieve any profit, return 0.

				`),g=r("a"),bt=f("(Problem)"),xt=s(),p=r("section"),R(S.$$.fragment),Tt=s(),N=r("pre"),w=r("code"),kt=f(`
				`),Dt=f(Rt),St=f(`			
			`),wt=s(),U=r("p"),At=f("Time Complexity => o(n)"),Bt=s(),W=r("p"),Pt=f("Space Complexity => o(1)"),Ct=s(),E=r("a"),It=f("Back"),Nt=s(),X=r("footer"),R(A.$$.fragment),this.h()},l(e){d=n(e,"HEAD",{});var h=o(d);J=n(h,"META",{name:!0,content:!0}),st=l(h),q=n(h,"META",{name:!0,content:!0}),lt=l(h),z=n(h,"TITLE",{});var Ht=o(z);ct=m(Ht,it),Ht.forEach(a),h.forEach(a),Z=l(e),H(x.$$.fragment,e),tt=l(e),u=n(e,"MAIN",{class:!0});var L=o(u);j=n(L,"HEADER",{});var Mt=o(j);H(T.$$.fragment,Mt),Mt.forEach(a),ft=l(L),c=n(L,"MAIN",{class:!0});var $=o(c);v=n($,"DIV",{id:!0});var O=o(v);H(k.$$.fragment,O),mt=l(O),G=n(O,"H4",{});var Vt=o(G);dt=m(Vt,"Leetcode Blind 75"),Vt.forEach(a),pt=l(O),B=n(O,"H5",{style:!0});var Yt=o(B);ht=m(Yt,"20th June 2022 ~ Dion Pinto"),Yt.forEach(a),O.forEach(a),ut=l($),_=n($,"DIV",{id:!0,class:!0});var at=o(_);K=n(at,"DIV",{});var Ft=o(K);P=n(Ft,"A",{href:!0});var Jt=o(P);vt=m(Jt,"Description"),Jt.forEach(a),Ft.forEach(a),$t=l(at),Q=n(at,"DIV",{});var qt=o(Q);C=n(qt,"A",{href:!0});var zt=o(C);_t=m(zt,"Code"),zt.forEach(a),qt.forEach(a),at.forEach(a),yt=l($),y=n($,"SECTION",{id:!0});var rt=o(y);H(D.$$.fragment,rt),gt=l(rt),I=n(rt,"P",{});var Lt=o(I);Et=m(Lt,`You are given an array prices where prices[i] is the price of a given stock on the ith day.
				You want to maximize your profit by choosing a single day to buy one stock and choosing a
				different day in the future to sell that stock. Return the maximum profit you can achieve
				from this transaction. If you cannot achieve any profit, return 0.

				`),g=n(Lt,"A",{id:!0,href:!0,target:!0});var jt=o(g);bt=m(jt,"(Problem)"),jt.forEach(a),Lt.forEach(a),rt.forEach(a),xt=l($),p=n($,"SECTION",{id:!0});var b=o(p);H(S.$$.fragment,b),Tt=l(b),N=n(b,"PRE",{id:!0});var Gt=o(N);w=n(Gt,"CODE",{});var nt=o(w);kt=m(nt,`
				`),Dt=m(nt,Rt),St=m(nt,`			
			`),nt.forEach(a),Gt.forEach(a),wt=l(b),U=n(b,"P",{});var Kt=o(U);At=m(Kt,"Time Complexity => o(n)"),Kt.forEach(a),Bt=l(b),W=n(b,"P",{});var Qt=o(W);Pt=m(Qt,"Space Complexity => o(1)"),Qt.forEach(a),b.forEach(a),Ct=l($),E=n($,"A",{type:!0,class:!0,href:!0});var Ut=o(E);It=m(Ut,"Back"),Ut.forEach(a),$.forEach(a),Nt=l(L),X=n(L,"FOOTER",{});var Wt=o(X);H(A.$$.fragment,Wt),Wt.forEach(a),L.forEach(a),this.h()},h(){i(J,"name","author"),i(J,"content","Dion Pinto"),i(q,"name","description"),i(q,"content",`Leetcode Blind 75 ${it}`),ae(B,"font-style","italic"),i(v,"id","title"),i(P,"href","#description"),i(C,"href","#code"),i(_,"id","index"),i(_,"class","nes-container is-rounded is-dark"),i(g,"id","link"),i(g,"href","https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"),i(g,"target","_blank"),i(y,"id","description"),i(N,"id","block"),i(p,"id","code"),i(E,"type","button"),i(E,"class","nes-btn is-primary"),i(E,"href",`${ne}/blind75`),i(c,"class","container svelte-gwfu10"),i(u,"class","main")},m(e,h){ot(e,d,h),t(d,J),t(d,st),t(d,q),t(d,lt),t(d,z),t(z,ct),ot(e,Z,h),M(x,e,h),ot(e,tt,h),ot(e,u,h),t(u,j),M(T,j,null),t(u,ft),t(u,c),t(c,v),M(k,v,null),t(v,mt),t(v,G),t(G,dt),t(v,pt),t(v,B),t(B,ht),t(c,ut),t(c,_),t(_,K),t(K,P),t(P,vt),t(_,$t),t(_,Q),t(Q,C),t(C,_t),t(c,yt),t(c,y),M(D,y,null),t(y,gt),t(y,I),t(I,Et),t(I,g),t(g,bt),t(c,xt),t(c,p),M(S,p,null),t(p,Tt),t(p,N),t(N,w),t(w,kt),t(w,Dt),t(w,St),t(p,wt),t(p,U),t(U,At),t(p,Bt),t(p,W),t(W,Pt),t(c,Ct),t(c,E),t(E,It),t(u,Nt),t(u,X),M(A,X,null),et=!0},p:re,i(e){et||(V(x.$$.fragment,e),V(T.$$.fragment,e),V(k.$$.fragment,e),V(D.$$.fragment,e),V(S.$$.fragment,e),V(A.$$.fragment,e),et=!0)},o(e){Y(x.$$.fragment,e),Y(T.$$.fragment,e),Y(k.$$.fragment,e),Y(D.$$.fragment,e),Y(S.$$.fragment,e),Y(A.$$.fragment,e),et=!1},d(e){e&&a(d),e&&a(Z),F(x,e),e&&a(tt),e&&a(u),F(T),F(k),F(D),F(S),F(A)}}}const it="121. Best Time to Buy and Sell Stock";class he extends Zt{constructor(d){super(),te(this,d,null,le,ee,{})}}export{he as default};
